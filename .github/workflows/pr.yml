name: Test

on:
  pull_request:
    paths-ignore:
      - '*.md'
      - '*.asciidoc'
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual run'
        required: false

jobs:
  gradle:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Setup java
        uses: actions/setup-java@v2
        with:
          java-version: 11
          cache: gradle
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1.0.4
      - name: Execute tests
        id: gradle
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: ':check -s'
      - name: Comment on PR with build scan
        uses: mshick/add-pr-comment@v1
        if: failure()
        with:
          repo-token: ${{ secrets.githubToken }}
          message: Build failed ${{ steps.gradle.outputs.build-scan-url }}
      - name: Store hprof files
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: hprofs
          path: ./**/*.hprof
      - name: Store daemon log
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: daemon-log
          path: ./**/*.out.log
      - name: Store gc logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: gc-logs
          path: ./**/build/gc/*.log
      - name: Cleanup Gradle Cache
        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
